// Kelas Passenger
class Passenger {
    String name;
    Passenger next;

    public Passenger(String name) {
        this.name = name;
        this.next = null;
    }
}

// Kelas Flight
class Flight {
    private Passenger head;

    public Flight() {
        this.head = null;
    }

    // Metode untuk menambah penumpang
    public void addPassenger(String name) {
        Passenger newPassenger = new Passenger(name);
        if (head == null) {
            head = newPassenger; // Jika daftar kosong, tambahkan penumpang sebagai head
        } else {
            Passenger current = head;
            while (current.next != null) {
                current = current.next; // Cari akhir daftar penumpang
            }
            current.next = newPassenger; // Tambahkan penumpang baru di akhir
        }
    }

    // Metode untuk menghapus penumpang berdasarkan nama
    public void removePassenger(String name) {
        if (head == null) {
            System.out.println("Daftar penumpang kosong.");
            return;
        }

        if (head.name.equals(name)) {
            head = head.next; // Hapus penumpang dari head
            return;
        }

        Passenger current = head;
        while (current.next != null) {
            if (current.next.name.equals(name)) {
                current.next = current.next.next; // Hapus penumpang
                return;
            }
            current = current.next; // Pindah ke penumpang berikutnya
        }
        System.out.println("Penumpang dengan nama " + name + " tidak ditemukan.");
    }

    // Metode untuk menampilkan semua penumpang
    public void displayPassengers() {
        if (head == null) {
            System.out.println("Daftar penumpang kosong.");
            return;
        }

        Passenger current = head;
        while (current != null) {
            System.out.println(current.name); // Tampilkan nama penumpang
            current = current.next; // Pindah ke penumpang berikutnya
        }
    }

    public static void main(String[] args) {
        Flight flight = new Flight();
        flight.addPassenger("Alice");
        flight.addPassenger("Bob");
        flight.addPassenger("Charlie");

        System.out.println("Daftar Penumpang:");
        flight.displayPassengers();

        flight.removePassenger("Bob");
        System.out.println("Setelah menghapus Bob:");
        flight.displayPassengers();

        flight.removePassenger("David"); // Contoh menghapus penumpang yang tidak ada
    }
}
